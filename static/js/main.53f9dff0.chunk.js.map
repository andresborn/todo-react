{"version":3,"sources":["components/Form.js","components/Task.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onSubmit","onChange","task","className","type","placeholder","value","required","style","backgroundColor","Task","deleteTask","toggleImportant","onHoverEnter","onHoverLeave","onMouseEnter","id","onMouseLeave","onDoubleClick","important","hover","onClick","aria-label","aria-hidden","List","taskList","map","i","App","useState","setTask","setTaskList","useEffect","a","getData","serverTaskList","getTaskListFromServer","fetch","res","json","data","setTaskOnServer","method","headers","body","JSON","stringify","e","preventDefault","push","nanoid","target","label","done","length","filteredList","filter","importantList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53f9dff0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({onSubmit, onChange , task}) => {\n  return (\n    <form onSubmit={onSubmit} className=\"form-group\">\n      <input\n        onChange={onChange}\n        type=\"text\"\n        className=\"col-12 form-control eczar\"\n        placeholder=\"¿Qué hay para hoy?\"\n        value={task.value}\n        required\n        style={{backgroundColor: \"#f0e4df\"}}\n      />\n    </form>\n  );\n};\n\nexport default Form\n","import React from \"react\";\n\nconst Task = ({ task, deleteTask, toggleImportant, onHoverEnter, onHoverLeave }) => {\n  return (\n    <div \n    onMouseEnter={() => onHoverEnter(task.id)}\n    onMouseLeave={() => onHoverLeave(task.id)}\n    onDoubleClick={() => toggleImportant(task.id)}\n    className={`breadcrumb justify-content-between tarea ${task.important ? \"important\" : \"\" }`}>\n      <div className=\"col-11\">\n        <p>{task.value}</p>\n      </div>\n      <button\n        className={`close col-1 ${task.hover ? \"\" : \"hidden\"}`}\n        onClick={() => deleteTask(task.id)}\n        type=\"button\"\n        aria-label=\"Close\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"./Task\";\n\nconst List = ({ taskList, deleteTask, toggleImportant, onHoverEnter, onHoverLeave }) => {\n  return (\n    <div>\n      { taskList.map((task, i) => <Task key={i} task={task} deleteTask={deleteTask} toggleImportant={toggleImportant} onHoverEnter={onHoverEnter} onHoverLeave={onHoverLeave} />) }\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [task, setTask] = useState(\"\");\n  const [taskList, setTaskList] = useState([]);\n\n  useEffect(() => {\n    const getTaskListFromServer = async () => {\n      const serverTaskList = await getData()\n      setTaskList(serverTaskList)\n    }\n    getTaskListFromServer()\n  }, [])\n\n  // Fetch Task List\n  const getData = async () => {\n    const res = await fetch(\"https://assets.breatheco.de/apis/fake/todos/user/andresborn\")\n    const data = await res.json()\n    return data\n  }\n\n  // Set Task List on Server\n  const setTaskOnServer = async (taskList) => {\n    await fetch(\"https://assets.breatheco.de/apis/fake/todos/user/andresborn\",\n    {\n      method:'PUT',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify(taskList)\n    })\n  }\n\n  // Controlled form\n  const onChange = (e) => {\n    const id = nanoid();\n    setTask({\n      value: e.target.value,\n      id: id,\n      important: false,\n      hover: false,\n      label: e.target.value,\n      done: false\n    });\n  };\n\n  // Add Task to Task List\n  const onSubmit = (e) => {\n    e.preventDefault();\n    taskList.push(task)\n    setTaskOnServer(taskList)\n    setTaskList([...taskList])\n\n    // Note:\n    // Initially we were trying to do:\n    // setTaskList([...taskList, task]) and then\n    // setTaskOnServer(taskList)\n    // but, setTaskList is async, so our updated taskList isn't ready to be sent.\n\n    // How we've fixed this is:\n    // taskList.push(task) inmediately updates our taskList, then\n    // setTaskOnServer(taskList) updates our server, and finally\n    // setTaskList([...taskList]) updates our UI\n    \n    setTask({ value: \"\" }); // Reset task form\n  };\n\n  // Delete Task\n  const deleteTask = (id) => {\n    const filteredList = taskList.filter((task) => !(task.id === id))\n    setTaskOnServer(filteredList)\n    setTaskList(filteredList)\n\n  }\n\n  // DoubleClick to toggle important task\n  const toggleImportant = (id) => {\n    const importantList = taskList.map(task => {\n      if (task.id === id) {\n        task.important = !task.important\n        return task\n      } else {\n        return task\n      }\n    })\n    setTaskOnServer(importantList)\n    setTaskList(importantList)\n  }\n  // Activate hover to conditionally display delete button\n  const onHoverEnter = (id) => {\n    setTaskList(taskList.map(task => {\n      if (task.id === id) {\n        task.hover = true\n        return task\n      } else {\n        return task\n      }\n    }))\n  }\n\n  const onHoverLeave = (id) => {\n    setTaskList(taskList.map(task => {\n      if (task.id === id) {\n        task.hover = false\n        return task\n      } else {\n        return task\n      }\n    }))\n  }\n  \n\n  return (\n    <div className=\"container\">\n      <div className=\"row my-2\">\n        <div className=\"col-12 text-center\">\n          <h1 className=\"ewert\">Tareas Vaqueras</h1>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Form onSubmit={onSubmit} onChange={onChange} task={task} />\n        </div>\n      </div>\n      <div className=\"row eczar\">\n        <div className=\"col\">\n        \n        { taskList.length > 0 ? <List \n          taskList={taskList} \n          deleteTask={deleteTask} \n          toggleImportant={toggleImportant}\n          onHoverEnter={onHoverEnter}\n          onHoverLeave={onHoverLeave}\n           /> : \"No hay tareas en la lista\"}\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}